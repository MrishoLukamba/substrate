# .gitlab-ci.yml
#
# substrate
#
# pipelines can be triggered manually in the web

# SAMPLE JOB TEMPLATE - This is not a complete example but is enough to build a
# simple CI job. For full documentation, visit https://docs.gitlab.com/ee/ci/yaml/
#
# my-example-job:
#   stage:                           test # One of the stages listed below this job (required)
#   image:                           paritytech/tools:latest # Any docker image (required)
#   allow_failure:                   true # Allow the pipeline to continue if this job fails (default: false)
#   needs:
#     - job:                         test-linux # Any jobs that are required to run before this job (optional)
#   variables:
#     MY_ENVIRONMENT_VARIABLE:       "some useful value" # Environment variables passed to the job (optional)
#   script:
#     - echo "List of shell commands to run in your job"
#     - echo "You can also just specify a script here, like so:"
#     - ./scripts/ci/gitlab/my_amazing_script.sh

stages:
  - check
  - test
  - build
  - publish
  - deploy

workflow:
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH

variables:                         &default-vars
  GIT_STRATEGY:                    fetch
  GIT_DEPTH:                       100
  CARGO_INCREMENTAL:               0
  DOCKER_OS:                       "debian:stretch"
  ARCH:                            "x86_64"
  CI_IMAGE:                        "paritytech/ci-linux:production"

default:
  retry:
    max: 2
    when:
      - runner_system_failure
      - unknown_failure
      - api_failure
  interruptible:                   true
  cache:                           {}

.collect-artifacts:                &collect-artifacts
  artifacts:
    name:                          "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    when:                          on_success
    expire_in:                     7 days
    paths:
      - artifacts/

.collect-artifacts-short:          &collect-artifacts-short
  artifacts:
    name:                          "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    when:                          on_success
    expire_in:                     3 hours
    paths:
      - artifacts/

.kubernetes-env:
  image:                           "${CI_IMAGE}"
  tags:
    - kubernetes-parity-build

.rust-info-script:                 &rust-info-script
  script:
    - rustup show
    - cargo --version
    - rustup +nightly show
    - cargo +nightly --version
    - sccache -s

.docker-env:                       &docker-env
  image:                           "${CI_IMAGE}"
  before_script:
    - !reference [.rust-info-script, script]
  tags:
    - linux-docker

.test-refs:                        &test-refs
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_COMMIT_REF_NAME == "master"
    - if: $CI_COMMIT_REF_NAME =~ /^[0-9]+$/                         # PRs
    - if: $CI_COMMIT_REF_NAME =~ /^v[0-9]+\.[0-9]+.*$/              # i.e. v1.0, v2.1rc1

.test-refs-no-trigger:             &test-refs-no-trigger
  rules:
    - if: $CI_PIPELINE_SOURCE == "pipeline"
      when: never
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_COMMIT_REF_NAME == "master"
    - if: $CI_COMMIT_REF_NAME =~ /^[0-9]+$/                         # PRs
    - if: $CI_COMMIT_REF_NAME =~ /^v[0-9]+\.[0-9]+.*$/              # i.e. v1.0, v2.1rc1
    - if: $CI_COMMIT_REF_NAME =~ /^ci-release-.*$/

.test-refs-no-trigger-prs-only:   &test-refs-no-trigger-prs-only
  rules:
    - if: $CI_PIPELINE_SOURCE == "pipeline"
      when: never
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_COMMIT_REF_NAME =~ /^[0-9]+$/                         # PRs

.test-refs-wasmer-sandbox:                        &test-refs-wasmer-sandbox
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_COMMIT_REF_NAME == "master"
      changes:
        - client/executor/**/*
        - frame/contracts/**/*
        - primitives/sandbox/**/*
    - if: $CI_COMMIT_REF_NAME =~ /^[0-9]+$/                         # PRs
      changes:
        - client/executor/**/*
        - frame/contracts/**/*
        - primitives/sandbox/**/*
    - if: $CI_COMMIT_REF_NAME =~ /^v[0-9]+\.[0-9]+.*$/              # i.e. v1.0, v2.1rc1
      changes:
        - client/executor/**/*
        - frame/contracts/**/*
        - primitives/sandbox/**/*

.build-refs:                       &build-refs
  rules:
    - if: $CI_PIPELINE_SOURCE == "pipeline"
      when: never
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_COMMIT_REF_NAME == "master"
    - if: $CI_COMMIT_REF_NAME =~ /^v[0-9]+\.[0-9]+.*$/              # i.e. v1.0, v2.1rc1

.nightly-pipeline:                 &nightly-pipeline
  rules:
    # this job runs only on nightly pipeline with the mentioned variable, against `master` branch
    - if: $CI_COMMIT_REF_NAME == "master" && $CI_PIPELINE_SOURCE == "schedule" && $PIPELINE == "nightly"

#### stage:                       .pre

skip-if-draft:
  extends:                         .kubernetes-env
  variables:
    CI_IMAGE:                      "paritytech/tools:latest"
  stage:                           .pre
  rules:
    - if: $CI_COMMIT_REF_NAME =~ /^[0-9]+$/                         # PRs
  script:
     - echo "Commit message is ${CI_COMMIT_MESSAGE}"
     - echo "Ref is ${CI_COMMIT_REF_NAME}"
     - echo "pipeline source is ${CI_PIPELINE_SOURCE}"
     - ./scripts/ci/gitlab/skip_if_draft.sh

#### stage:                        check

include:
  - scripts/ci/gitlab/pipeline/check.yml
  - scripts/ci/gitlab/pipeline/test.yml
  - scripts/ci/gitlab/pipeline/build.yml
  - scripts/ci/gitlab/pipeline/publish.yml

#### stage:                        test


#### stage:                        build


#### stage:                        publish


#### stage:                        deploy

deploy-prometheus-alerting-rules:
  stage:                           deploy
  needs:
    - job:                         test-prometheus-alerting-rules
      artifacts:                   false
  allow_failure:                   true
  trigger:
    project:  parity/infrastructure/cloud-infra
  variables:
    SUBSTRATE_CI_COMMIT_NAME:       "${CI_COMMIT_REF_NAME}"
    SUBSTRATE_CI_COMMIT_REF:        "${CI_COMMIT_SHORT_SHA}"
    UPSTREAM_TRIGGER_PROJECT:       "${CI_PROJECT_PATH}"
  rules:
    - if: $CI_PIPELINE_SOURCE == "pipeline"
      when: never
    - if: $CI_COMMIT_REF_NAME == "master"
      changes:
        - .gitlab-ci.yml
        - ./scripts/ci/monitoring/**/*
